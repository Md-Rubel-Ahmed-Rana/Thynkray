
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid()) @db.Uuid
  name          String
  email         String   @unique
  role          String?   @default("author")
  bio           String?  @db.Text
  designation           String?  @db.Text
  profile_image String?  @db.Text
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  comments Comment[]

  posts Post[]
}


model Post {
  id String @id @default(uuid()) @db.Uuid
  title String @db.Text
  slug String @unique @db.Text
  thumbnail String? @db.Text
  category String? @db.Text
  description String? @db.Text
  tags String[] @db.Text @default([])
  authorId String @db.Uuid
  author User? @relation(fields: [authorId], references: [id])
  comments    Comment[]
  content    PostSection[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt 
}

model PostSection {
  id String @id @default(uuid()) @db.Uuid
  postId String @db.Uuid
  post Post? @relation(fields: [postId], references: [id], onDelete: Cascade)
  title String? @db.Text
  images String[] @db.Text @default([])
  description String? @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Comment {
  id String @id @default(uuid()) @db.Uuid
  postId String @db.Uuid
  post Post? @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId String @db.Uuid
  user User? @relation(fields: [userId], references: [id])
  content String? @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}